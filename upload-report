#!/usr/bin/env python3

import argparse
import requests
from paramiko import SSHClient
from scp import SCPClient


def parse_args():
    """
    Handle CLI arguments.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument(
            "--file",
            required=True,
            action="store",
            help="Path to the report file to upload to the proxy",
    )
    parser.add_argument(
            "--status",
            action="store",
            required=True,
            help="Status of the test to send as a Github commit status",
    )
    parser.add_argument(
            "--sha",
            required=True,
            action="store",
            help="SHA commit hash to report the commit status for"
    )
    args = parser.parse_args()
    return args


def upload_report(report):
    """
    Uploads the report to the CI runner proxy
    """
    ssh_ob = SSHClient()
    ssh_ob.load_system_host_keys()
    ssh_ob.connect(hostname="ws-ci-runner.securedrop.org", username="wscirunner")
    scp = SCPClient(ssh_ob.get_transport())
    scp.put(f"/home/user/QubesIncoming/dom0/{report}", remote_path="/var/www/html/reports")
    scp.close()


def report_status(status, sha, report):
    """
    Reports a Github commit status
    """
    github_token = "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    headers = {
            "Authorization": f"Bearer {github_token}",
            "Content-Type": "application/json",
    }
    data = {
        "state": status,
        "target_url": f"https://ws-ci-runner.securedrop.org/{report}"
    }
    r = requests.post(f"https://api.github.com/repos/mig5/securedrop-workstation/statuses/{sha}", json=data, headers=headers)


if __name__ == "__main__":
    # Parse args
    args = parse_args()
    # Upload the report to the CI runner proxy
    upload_report(args.file)
    # Report Github status check
    report_status(args.status, args.sha, args.file)


